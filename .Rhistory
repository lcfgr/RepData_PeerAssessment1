ppois(30,15)
ppois(10,15)
unzip
pwd
setwd
getwd(0)
getwd()
setwd("RepData_PeerAssessment1/")
ls -la
ls
list
if(!file.exists('activity.csv'))
unzip('activity.zip')
activity <- read.csv("activity.csv")
sum(activity)
str(activity)
activity$steps
ls -la
activity$date <- as.Date(activity$date, format="%Y-%m-%d")
?as.Date
activity$date
activity$date[1]
activity$interval
activity <- read.csv("activity.csv")
# Transform date from factor into date variable
activity$date <- as.POSIXct(activity$date)
rm(list=ls())
activity <- read.csv("activity.csv")
# Transform date from factor into date variable
activity$date <- as.POSIXct(activity$date)
activity$date
dailysteps <- aggregate(activity$steps, by = list(activity$date), sum, na.rm=TRUE)
names(dailysteps) <- c("Date", "steps")
qplot(steps, data = dailysteps, geom="histogram", xlab = "Daily Number of Steps", binwidth = 300)
library(ggplot2)
total.steps.by.day <- aggregate(x = df$steps , by = list(df$date), FUN = sum ,na.rm=TRUE)
names(total.steps.by.day) <- c("date","steps")
histplot <- ggplot(total.steps.by.day,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 2000)") +
geom_histogram(binwidth = 2000)
histplot
histplot <- ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 2000)") +
geom_histogram(binwidth = 2000)
histplot <- ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 2000)") +
geom_histogram(binwidth = 2000)
histplot
ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 1000)") +
geom_histogram(binwidth = 1000)
ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 1000)") +
geom_histogram(binwidth = 500)
ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 1000)") +
geom_histogram()
ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 1000)") +
geom_histogram(binwidth = 300)
ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 1000)") +
geom_histogram(binwidth = 100)
ggplot(dailysteps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 1000)") +
geom_histogram(binwidth = 200)
mean(dailysteps$steps, na.rm="TRUE")
median(dailysteps$steps, na.rm="TRUE")
intsteps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
intstepsmed <- aggregate(activity$steps, by = list(activity$interval), median, na.rm=TRUE)
activity.steps
activity$steps
sum(intsteps)
str(intsteps)
rm(list=ls())
# Loading and preprocessing data
if(!file.exists('activity.csv'))
unzip('activity.zip')
activity <- read.csv("activity.csv")
# Transform date from factor into date variable
activity$date <- as.POSIXct(activity$date)
## What is mean total number of steps taken per day?
# We ignore NA values
daily_steps <- aggregate(activity$steps, by = list(activity$date), sum, na.rm=TRUE)
names(daily_steps) <- c("Date", "steps")
# Histogram of daily steps
library(ggplot2)
ggplot(daily_steps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 200)
#mean and median total number of steps taken per day
mean(daily_steps$steps, na.rm="TRUE")
# Calculate the average daily activity pattern?
avg_steps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
str(avg_steps)
sum(avg_steps)
summary(avg_steps)
names(avg_steps) = c("interval"", "average steps")
names(avg_steps) = c("interval", "average steps")
summary(avg_steps)
ggplot(avg_steps, aes(x = interval, y = steps)) + geom_line()
ggplot(avg_steps, aes(x = interval, y = avg_steps)) + geom_line()
ggplot(intsteps, aes(x = interval, y = "average steps")) + geom_line()
ggplot(avg_steps, aes(x = interval, y = "average steps")) + geom_line()
ggplot(avg_steps)
View(activity)
names(avg_steps) = c("interval", "average_steps")
ggplot(avg_steps, aes(x = interval, y = "average_steps")) + geom_line()
intsteps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
intstepsmed <- aggregate(activity$steps, by = list(activity$interval), median, na.rm=TRUE)
intsteps <- cbind(intsteps[], intstepsmed$x)
#Tidy the df names and round the numbers
names(intsteps) = c("interval","mean.steps", "median.steps")
intsteps$mean.steps <- round(intsteps$mean.steps)
intsteps$median.steps <- round(intsteps$median.steps)
ggplot(intsteps, aes(x = interval, y = mean.steps)) + geom_line()
rm(list=ls())
activity <- read.csv("activity.csv") # read in the data
activity$date <- as.POSIXct(activity$date) # set the dates to POSIXct
dailysteps <- aggregate(activity$steps, by = list(activity$date), sum, na.rm=TRUE)
names(dailysteps) <- c("Date", "steps")
#Make a histogram of the total number of steps taken each day
qplot(steps, data = dailysteps, geom="histogram", xlab = "Daily Number of Steps", binwidth = 300).
mean.steps <- mean(dailysteps$steps)
intsteps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
names(intsteps) = c("interval","mean.steps", "median.steps")
names(intsteps) = c("interval","mean.steps")
ggplot(intsteps, aes(x = interval, y = mean.steps)) + geom_line()
ggplot(intsteps, aes(x = interval, y = mean.steps)) + geom_line()
daily_steps <- aggregate(activity$steps, by = list(activity$date), sum, na.rm=TRUE)
names(daily_steps) <- c("Date", "steps")
# Histogram of daily steps
library(ggplot2)
ggplot(daily_steps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 200)
#mean and median total number of steps taken per day
mean(daily_steps$steps, na.rm="TRUE")
# Calculate the average daily activity pattern
avg_steps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
names(avg_steps) = c("interval", "avg_steps")
ggplot(avg_steps, aes(x = interval, y = "avg_steps")) + geom_line()
names(avg_steps) = c("interval", "mean.steps")
ggplot(avg_steps, aes(x = interval, y = "mean.steps")) + geom_line()
avg_steps - intsteps
str(avg_steps)
ggplot(avg_steps, aes(x = interval, y = "mean.steps")) + geom_line()
ggplot(intsteps, aes(x = interval, y = "mean.steps")) + geom_line()
ggplot(intsteps, aes(x = interval, y = "mean.steps")) + geom_line()
ggplot(intsteps, aes(x = interval, y = mean.steps)) + geom_line()
names(avg_steps) = c("interval", "mean_steps")
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line()
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line()
max_steps<- avg_steps[which.max(avg_steps)]
which.max(avg_steps)
which.max(avg_steps$mean_steps)
avg_steps[which.max(avg_steps$mean_steps)]
avg_steps[,which.max(avg_steps$mean_steps)]
avg_steps[which.max(avg_steps$mean_steps),]
max_avg_steps <- avg_steps[which.max(avg_steps$mean_steps),]
points(max_avg_steps$interval,  max_avg_steps$mean_steps, col = 'red', lwd = 4, pch = 20)
geom_point(data = max_avg_steps, colour = "red")
geom_point(max_avg_steps, colour = "red")
geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps), colour = "red")
geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps))
geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps)))
geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color=red))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red'))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=19))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=30))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=300))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=1))
geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, colour = "red", size=10))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=3))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=5))
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red', size=1))
?geom_point
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red'),size=5)
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red'),size=15)
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red'),size=5)
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red',size=5)
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(aes(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red'),size=5)
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red',size=5)
legend("topright", legend = paste('Maximum Of ', round(max_steps$avg_steps, 1), ' Steps \n On ', max_steps$interval, 'th Time Interval', sep = ''), text.col = 'red', bty = 'n' ) , text.col = 'red', bty = 'n' )
legend("topright", legend = paste('Maximum Of ', round(max_avg_steps$avg_steps, 1), ' Steps \n On ', max_avg_steps$interval, 'th Time Interval', sep = ''), text.col = 'red', bty = 'n' ) , text.col = 'red', bty = 'n' )
max_lab = paste('Maximum Of ', round(max_avg_steps$avg_steps, 1), ' Steps \n On ', max_avg_steps$interval, 'th Time Interval', sep = '')
max_lab = paste('Maximum Of ', round(max_avg_steps$mean_steps, 1), ' Steps \n On ', max_avg_steps$interval, 'th Time Interval', sep = '')
legend("topright",
legend = max_lab,
text.col = 'red',
bty = 'n'
)
max_avg_steps$mean_steps[1]
max_avg_steps$mean_steps[2]
max_avg_steps$mean_steps[,1]
max_avg_steps$mean_steps[1]
max_avg_steps$mean_steps[1,]
max_avg_steps$mean_steps[1]
max_avg_steps$mean_steps[]
max_avg_steps$mean_steps
max_avg_steps$interval
NA_steps <- subset(activity,is.na(steps))
View(NA_steps)
View(NA_steps)
?which
is.na(steps)
is.na(activity$steps)
na.steps <- subset(activity, is.na(steps))
num.NAs <-length(na.steps$steps)
?matchg
?match
match(avg_steps$interval, activity$interval[is.na(activity$steps)])
activity$interval[is.na(activity$steps)]
is.na(activity$steps)
which(is.na(activity$steps))
length(which(is.na(activity$steps)))
activity[selectMethod()]
selected <- which(is.na(activity$steps))
activity[selected]
activity(selected)
activity[selected]
activity
selected
activity[selected,]
View(na.steps)
View(na.steps)
View(NA_steps)
View(NA_steps)
imputed_steps <- avg_steps
imputed_steps <- avg_steps
imputed_steps$steps[is.na(imputed_steps$steps)] <-tapply(imputed_steps$steps, imputed_steps$interval, mean, na.rm = TRUE)
imputed_steps <- activity
imputed_steps$steps[is.na(imputed_steps$steps)] <-tapply(imputed_steps$steps, imputed_steps$interval, mean, na.rm = TRUE)
?tapply
tapply(imputed_steps$steps, imputed_steps$interval, mean, na.rm = TRUE)
imputed_steps$steps[is.na(imputed_steps$steps)]
is.na(imputed_steps$steps)
sum(is.na(imputed_steps$steps))
imputed_steps
imputed_steps$steps
?merge
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
View(imputed_steps)
sum(iimpuimputed_steps)
sum(impuimputed_steps)
sum(imputed_steps)
str(imputed_steps)
imputed_steps[is.na(imputed_steps)]
imputed_steps[which(is.na(imputed_steps))]
selected <- which(is.na(imputed_steps$steps))
selected
imputed_steps[selected,"steps"]
imputed_steps[selected,"mean_steps"]
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
summary(imputed_steps)
summary(activity)
summary(imputed_steps)
View(activity)
View(activity)
imputed_steps <- merge( y = activity, x = avg_steps, by = "interval", all.y = TRUE)
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
avg_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
View(daily_steps2)
View(daily_steps)
View(daily_steps2)
names(dailysteps2) <- c("Date", "steps")
names(daily_steps2) <- c("Date", "steps")
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 200)
plot(new)
new.plot
library(ggplot2)
ggplot(daily_steps,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 200)
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 200)
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
names(daily_steps2) <- c("Date", "steps")
# Histogram of daily steps without NA
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 200)
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
names(daily_steps2) <- c("Date", "steps")
# Histogram of daily steps without NA
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
geom_histogram(binwidth = 300)
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
names(daily_steps2) <- c("Date", "steps")
# Histogram of daily steps without NA
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
geom_histogram()
$weekdays
\weekdays
weekdays
?weekdays
weekdays(imputed_steps$date)
Sys.setlocale("LC_TIME", "en_US")
weekdays(imputed_steps$date)
weekdays(imputed_steps$date)
c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday")[as.POSIXlt(Day)$wday + 1]
isWeekday(imputed_steps$date)
library(timeDate)
install.packages(timeDate)
install.packages('timeDate')
library(timeDate)
isWeekday(imputed_steps$date)
imputed_steps$week <- if(isWeekday(imputed_steps$date, wday=1:5))
)
if(isWeekday(imputed_steps$date, wday=1:5))
isWeekday(imputed_steps$date, wday=1:5)
a<- isWeekday(imputed_steps$date, wday=1:5)
a
str(a)
imputed_steps$Week <- isWeekday(imputed_steps$date, wday=1:5)
imputed_steps$Week <- as.factor(imputed_steps$Week)
mean_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
View(imputed_steps)
imputed_steps$weekday <- if(isWeekday(imputed_steps$date, wday=1:5))
imputed_steps$Weekday <- as.factor(imputed_steps$Weekday)
mean_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
rm(list=ls(0))
rm(list=ls())
activity$date <- as.POSIXct(activity$date)
## What is mean total number of steps taken per day?
# We ignore NA values
daily_steps <- aggregate(activity$steps, by = list(activity$date), sum, na.rm=TRUE)
names(daily_steps) <- c("Date", "steps")
# Histogram of daily steps
library(ggplot2)
ggplot(daily_steps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 200)") +
ylab("Frequency") +
geom_histogram(binwidth = 200)
#mean and median total number of steps taken per day
mean(daily_steps$steps, na.rm="TRUE")
# Calculate the average daily activity pattern
avg_steps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
names(avg_steps) = c("interval", "mean_steps")
# Find maximum value
max_avg_steps <- avg_steps[which.max(avg_steps$mean_steps),]
# Plot the average daily activity pattern and the maximum value
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red',size=5)
$ The interval with the maximum number of steps
max_avg_steps$interval
##Imputing missing values
# Merge so that there is a new column that contains the average of the specific interval of each row
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
names(daily_steps2) <- c("Date", "steps")
# Histogram of daily steps without NA
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
ylab("Frequency") +
geom_histogram(binwidth = 200)
activity <- read.csv("activity.csv")
# Transform date from factor into date variable
activity$date <- as.POSIXct(activity$date)
## What is mean total number of steps taken per day?
# We ignore NA values
daily_steps <- aggregate(activity$steps, by = list(activity$date), sum, na.rm=TRUE)
names(daily_steps) <- c("Date", "steps")
# Histogram of daily steps
library(ggplot2)
ggplot(daily_steps,aes(x = steps)) +
ggtitle("Histogram of daily steps") +
xlab("Steps (binwidth 200)") +
ylab("Frequency") +
geom_histogram(binwidth = 200)
#mean and median total number of steps taken per day
mean(daily_steps$steps, na.rm="TRUE")
# Calculate the average daily activity pattern
avg_steps <- aggregate(activity$steps, by = list(activity$interval), mean, na.rm=TRUE)
names(avg_steps) = c("interval", "mean_steps")
# Find maximum value
max_avg_steps <- avg_steps[which.max(avg_steps$mean_steps),]
# Plot the average daily activity pattern and the maximum value
ggplot(avg_steps, aes(x = interval, y = mean_steps)) + geom_line() + geom_point(x = max_avg_steps$interval, y=max_avg_steps$mean_steps, color='red',size=5)
$ The interval with the maximum number of steps
max_avg_steps$interval
##Imputing missing values
# Merge so that there is a new column that contains the average of the specific interval of each row
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
names(daily_steps2) <- c("Date", "steps")
# Histogram of daily steps without NA
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
ylab("Frequency") +
geom_histogram(binwidth = 200)
## Are there differences in activity patterns between weekdays and weekends?
imputed_steps$weekday <- if(isWeekday(imputed_steps$date, wday=1:5))
imputed_steps$Weekday <- as.factor(imputed_steps$Weekday)
mean_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
View(imputed_steps)
imputed_steps$weekday <- if(isWeekday(imputed_steps$date, wday=1:5))
)
imputed_steps$weekday <- if(isWeekday(imputed_steps$date, wday=1:5))
imputed_steps$weekday <- isWeekday(imputed_steps$date, wday=1:5)
imputed_steps$Weekday <- as.factor(imputed_steps$Weekday)
imputed_steps$Weekday <- as.factor(imputed_steps$Weekday)
imputed_steps$weekday <- as.factor  (imputed_steps$weekday)
imputed_steps$Weekday <- isWeekday(imputed_steps$date, wday=1:5)
imputed_steps$Weekday <- as.factor(imputed_steps$Weekday)
mean_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$Weekday, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
mean_weekday <- aggregate(imputed_steps$weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$weekday, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
imputed_steps$weekday <- isWeekday(imputed_steps$date, wday=1:5)
imputed_steps$weekday <- as.factor(imputed_steps$weekday)
mean_weekday <- aggregate(imputed_steps$weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$weekday, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
imputed_steps <- merge( x = activity, y = avg_steps, by = "interval", all.x = TRUE)
selected <- which(is.na(imputed_steps$steps))
imputed_steps[selected,"steps"] <- imputed_steps[selected,"mean_steps"]
imputed_steps <- imputed_steps[,1:3]
daily_steps2 <- aggregate(imputed_steps$steps, by = list(imputed_steps$date), sum, na.rm=TRUE)
names(daily_steps2) <- c("Date", "steps")
# Histogram of daily steps without NA
library(ggplot2)
ggplot(daily_steps2,aes(x = steps)) +
ggtitle("Histogram of daily steps without NA") +
xlab("Steps (binwidth 200)") +
ylab("Frequency") +
geom_histogram(binwidth = 200)
## Are there differences in activity patterns between weekdays and weekends?
imputed_steps$weekday <- isweekday(imputed_steps$date, wday=1:5)
imputed_steps$weekday <- as.factor(imputed_steps$weekday)
library(timeDate)
imputed_steps$weekday <- isWeekday(imputed_steps$date, wday=1:5)
imputed_steps$weekday <- as.factor(imputed_steps$weekday)
mean_weekday <- aggregate(imputed_steps$weekday, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
warnings()
mean_weekday <- aggregate(imputed_steps$steps, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$steps, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
ggplot(mean_weekday, aes(x = interval, y = mean_steps)) + ylab("Number of Steps") + geom_line() + facet_grid(weekday~.)
c("weekday", "interval","mean_steps")
ggplot(mean_weekday, aes(x = interval, y = mean_steps)) + ylab("Number of Steps") + geom_line() + facet_grid(weekday~.)
names(mean_weekday) = c("weekday", "interval","mean_steps")
ggplot(mean_weekday, aes(x = interval, y = mean_steps)) + ylab("Number of Steps") + geom_line() + facet_grid(weekday~.)
?if
?ifelse
imputed_steps$weekday <- ifelse(isWeekday(imputed_steps$date, wday=1:5),"weekday","weekend")
imputed_steps$weekday <- as.factor(imputed_steps$weekday)
mean_weekday <- aggregate(imputed_steps$steps, by = list(imputed_steps$weekday, imputed_steps$interval), mean, na.rm = TRUE)
median_weekday <- aggregate(imputed_steps$steps, by = list(imputed_steps$weekday, imputed_steps$interval), median, na.rm = TRUE)
names(mean_weekday) = c("weekday", "interval","mean_steps")
ggplot(mean_weekday, aes(x = interval, y = mean_steps)) + ylab("Number of Steps") + geom_line() + facet_grid(weekday~.)
View(activity)
